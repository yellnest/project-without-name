version: "3"


services:
  db:
    image: postgres:17-alpine
    env_file:
      - backend/.env-prod
    ports:
      - "5433:5432"
    networks:
      - backend-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready", "-U", "admin" ]
      test: ["CMD-SHELL", "pg_isready -d project -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    restart: always
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5


  back_end:
    build:
      context: ./backend
#    environment:
#      DB_HOST: db
#      DB_PORT: 5432
#      DB_USER: admin
#      DB_PASS: admin
#      DB_NAME: project
    env_file:
      - backend/.env-prod
    ports:
      - "8000:8000"
    networks:
      - backend-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build:
      context: ./backend
    command: ["docker/celery.sh"]
    env_file:
      - backend/.env-prod
    networks:
      - backend-network
    depends_on:
      redis:
        condition: service_healthy


volumes:
  postgres_data:

networks:
  backend-network:
